FROM sirot/netperf-latest

RUN wget http://brick.kernel.dk/snaps/fio-2.2.10.tar.gz --no-check-certificate \
    && tar -zxvf fio-2.2.10.tar.gz

RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak && \
    echo "deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse" >/etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse" >>/etc/apt/sources.list  && \
    echo "deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse" >>/etc/apt/sources.list


RUN apt-get update \
    && apt-get install libaio-dev -y --allow-unauthenticated \
    && apt-get install gcc -y --allow-unauthenticated \
    && apt-get install wget -y --allow-unauthenticated

RUN apt-get install gnome-core-devel  libgtk2.0-dev libcanberra-gtk-module -y --allow-unauthenticated

RUN  cd fio-2.2.10 \
    && ./configure --enable-gfio \
    && make fio \
    && make gfio \
    && make install \
    && rm -rf fio-2.2.10.tar.gz \
    && ln -s /usr/local/bin/fio /usr/bin/fio \
    && ln -s /usr/local/bin/gfio /usr/bin/gfio 

CMD ["fio", "-S"]




# docker build -f Dockerfile-iperf-fio-gfio -t hff-iperf-fio-gfio:v0.1 .

# ctr -n k8s.io run  -t --rm hff-iperf-fio-gfio:v0.1 hfftest sh

# gfio
